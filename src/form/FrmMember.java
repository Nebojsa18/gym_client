/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import communication.Communication;
import domain.Gender;
import domain.Member;
import java.awt.Color;
import java.net.Socket;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import logic.ShowTypeEnum;

/**
 *
 * @author Admin
 */
public class FrmMember extends javax.swing.JFrame {
    
    Socket socket = null;
    SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
    Member m;
    ShowTypeEnum operation;
    
    //proba
    FrmViewAll forma;
    
    
    
    public FrmMember(Socket socket,Member m, ShowTypeEnum operation, FrmViewAll forma) {
        initComponents();
        setLocationRelativeTo(null);
        this.m=m;
        this.operation=operation;
        this.forma=forma;
        this.socket=socket;
        prepareForm();
        if(operation.equals(ShowTypeEnum.ADD)){
            lblId.setVisible(false);
            txtId.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFirstname = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        txtLastname = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        cbGender = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Firstname:");

        jLabel2.setText("Lastname:");

        jLabel3.setText("Birthday:");

        jLabel4.setText("Gender:");

        jLabel5.setText("Phone:");

        txtFirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameActionPerformed(evt);
            }
        });

        txtBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthdayActionPerformed(evt);
            }
        });

        txtLastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastnameActionPerformed(evt);
            }
        });

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblId.setText("Member ID");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFirstname)
                                    .addComponent(txtBirthday)
                                    .addComponent(txtLastname)
                                    .addComponent(txtPhone)
                                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameActionPerformed

    private void txtBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBirthdayActionPerformed

    private void txtLastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastnameActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(operation.equals(ShowTypeEnum.ADD)){
            saveMember();
            if(forma!=null){
                forma.prepareTable();
            }
        }
        else if(operation.equals(ShowTypeEnum.EDIT)){
            editMember();
            forma.prepareTable();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> cbGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblId;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    public JComboBox<Object> getCbGender(){
        return cbGender;
    }
    
    private void prepareForm() {
        fillGender();
        if(operation.equals(ShowTypeEnum.EDIT)){
            prepareEdit();
        }
        
    }

    private void fillGender() {
        getCbGender().removeAllItems();
        for(Gender gender: Gender.values()){
            getCbGender().addItem(gender);
        }
    }

    private void prepareEdit() {
        txtId.setText(m.getId()+"");
        txtFirstname.setText(m.getFirstname());
        txtLastname.setText(m.getLastname());
        txtBirthday.setText(sdf.format(m.getBirthday()));
        cbGender.setSelectedItem(m.getGender());
        txtPhone.setText(m.getPhone());
    
    }
    
    private void saveMember() {
        try {                                        
            Member member = new Member();
            member.setFirstname(txtFirstname.getText().trim());
            member.setLastname(txtLastname.getText().trim());
            Date birthday=null;
            try {
                birthday = sdf.parse(txtBirthday.getText());
            } catch (ParseException ex) {
                //Logger.getLogger(FrmMember.class.getName()).log(Level.SEVERE, null, ex);
                //JOptionPane.showMessageDialog(this, "Date is not in correct format (dd.MM.yyyy.)! " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                throw ex;
            }
            member.setBirthday(birthday);
            member.setGender((Gender) cbGender.getSelectedItem());
            member.setPhone(txtPhone.getText());
            System.out.println(member);
            if(!checkData(member)) throw new Exception("Check entered data");
            Communication.getInstance().addMember(member);
            
         
            JOptionPane.showMessageDialog(this,"Member successfully saved");                
            
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(this, "Member can't be saved.", "", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void editMember() {
        try {
            m.setFirstname(txtFirstname.getText().trim());
            m.setLastname(txtLastname.getText().trim());
            Date birthday=null;
            try {
                birthday = sdf.parse(txtBirthday.getText());
            } catch (ParseException ex) {
                //JOptionPane.showMessageDialog(this, "Date is not in correct format (dd.MM.yyyy.)! " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                throw ex;
            }
            m.setBirthday(birthday);
            m.setGender((Gender) cbGender.getSelectedItem());
            m.setPhone(txtPhone.getText());
            System.out.println(m);
            if(!checkData(m)) throw new Exception("Check entered data");
            Communication.getInstance().editMember(m);

            
            JOptionPane.showMessageDialog(this,"Member successfully updated");
            
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(this, "Member can't be updated.", "", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean checkData(Member m){
        boolean check = true;
        if(m.getFirstname().length()<=1){
            check=false;
        }
        if(m.getLastname().length()<=1){
            check=false;
        }
        if(m.getPhone().length()<=6){
            check=false;
        }
        if(!isAlpha(m.getFirstname())) {
            check=false;
        }
        if(!isAlpha(m.getLastname())) {
            check=false;
        }
        if(!isDigit(m.getPhone())){
            check=false;
        }
        return check;
    }
    
    private boolean isAlpha(String s){
        String x = s.toLowerCase();
        for(int i=0;i<x.length();i++){
            if(!(x.charAt(i)>='a' && x.charAt(i)<='z')){
                return false;
            }
        }
        return true;
    }
    
    private boolean isDigit(String s){
        String x = s.toLowerCase();
        for(int i=0;i<x.length();i++){
            if(!(x.charAt(i)>='0' && x.charAt(i)<='9')){
                return false;
            }
        }
        return true;
    }
    
    
}
